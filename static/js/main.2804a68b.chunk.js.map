{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","getSeason","lat","month","SeasonDisplay","props","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"oOAgBMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,uBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,kBACNC,SAAU,eAIRE,EAAY,SAACC,EAAKC,GACtB,OAAIA,EAAQ,GAAKA,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIjBE,EAhCO,SAAAC,GACpB,IAAMC,EAASL,EAAUI,EAAMH,KAAK,IAAIK,MAAOC,YADlB,EAEFZ,EAAaU,GAAhCR,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,SAEd,OACE,yBAAKU,UAAS,yBAAoBH,IAChC,uBAAGG,UAAS,4BAAuBV,EAAvB,WACZ,4BAAKD,GACL,uBAAGW,UAAS,6BAAwBV,EAAxB,aCTZW,EAAU,SAAAL,GACd,OACE,yBAAKI,UAAU,oBACb,yBAAKA,UAAU,sBAAsBJ,EAAMM,WAKjDD,EAAQE,aAAe,CACrBD,QAAS,cAGID,QCTTG,E,2MACJC,MAAQ,CAAEZ,IAAK,KAAMa,aAAc,I,mFAEd,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEnB,IAAKkB,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,sCAK3C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMZ,IAClC,uCAAauB,KAAKX,MAAMC,eAG5BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMZ,IAClC,kBAAC,EAAD,CAAeA,IAAKuB,KAAKX,MAAMZ,MAGjC,kBAAC,EAAD,CAASS,QAAQ,qC,+BAKxB,OAAO,yBAAKF,UAAU,eAAegB,KAAKC,qB,GAxB5BC,IAAMC,WA4BxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.2804a68b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SeasonDisplay.css\";\r\n\r\nconst SeasonDisplay = props => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: \"Let's hit the beach!\",\r\n    iconName: \"sun\"\r\n  },\r\n  winter: {\r\n    text: \"Burr it is cold\",\r\n    iconName: \"snowflake\"\r\n  }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  } else {\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\r\n\r\nconst Spinner = props => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: \"Loading...\"\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SeasonDisplay from \"./SeasonDisplay\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nclass App extends React.Component {\r\n  state = { lat: null, errorMessage: \"\" };\r\n\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => this.setState({ lat: position.coords.latitude }),\r\n      err => this.setState({ errorMessage: err.message })\r\n    );\r\n  }\r\n\r\n  renderContent() {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n      return <div>Error: {this.state.errorMessage}</div>;\r\n    }\r\n\r\n    if (!this.state.errorMessage && this.state.lat) {\r\n      return <SeasonDisplay lat={this.state.lat} />;\r\n    }\r\n\r\n    return <Spinner message=\"Please accept location request\" />;\r\n  }\r\n\r\n  // React says we have to define render!!\r\n  render() {\r\n    return <div className=\"boreder red\">{this.renderContent()}</div>;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}